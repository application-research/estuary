name: Release

on:
  push:
    # run only against tags
    tags:
      - '*'

permissions:
  contents: write

jobs:
  build_linux:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        version: ['linux/arm64']
        include:
        # add the GO naming convention for OS ($GOOS) and architecture ($GOARCH)
        # instead of using Linux' naming convention (version items).
          - version: linux/arm64
            OS: linux
            ARCH: arm64
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Build binary for ${{ matrix.version }}
      run: |
        docker run --rm -v "$PWD":/usr/est/build -w /usr/est/build --platform=${{ matrix.version }} jlogelin/estuary-base:latest /bin/sh -c "CARGO_NET_GIT_FETCH_WITH_CLI=true RUSTFLAGS='-C target-cpu=native -g' FFI_BUILD_FROM_SOURCE=1 make"
    - name: Prepare build artifact for stashing
      run: |
        tar -cvzf estuary.tar.gz ./estuary ./estuary-shuttle ./barge ./benchest ./bsget ./shuttle-proxy
        mkdir release
        mv ./estuary.tar.gz ./release
    # The build artifact can be identified by the trailing sha of the git commit
    - name: Stash the build artifact
      uses: actions/upload-artifact@v1
      with:
        name: estuary-${{ matrix.OS }}-${{ matrix.ARCH }}-${{ github.sha }}.tar.gz
        path: ./release